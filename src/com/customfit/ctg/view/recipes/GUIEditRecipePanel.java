/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUIEditRecipePanel.java
 *
 * Created on Apr 20, 2011, 8:45:16 PM
 *
 * @author Ryan Spoon
 */

package com.customfit.ctg.view.recipes;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import com.customfit.ctg.controller.Application;
import com.customfit.ctg.view.GUIFormats;
import com.customfit.ctg.view.Observer;

import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 * This is the main panel for managing the recipes that are available
 * to select from.
 *
 * @author Ryan Spoon
 */
public class GUIEditRecipePanel extends JPanel implements Observer {
    /** Creates new form OldRecipeListPanel */
    public GUIEditRecipePanel() {
        initComponents();
        custInitialize();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        panelSouth = new javax.swing.JPanel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        panelCenter = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        lblName1 = new javax.swing.JLabel();
        txtName1 = new javax.swing.JTextField();
        panelEast = new javax.swing.JPanel();
        scrollPaneNutrition = new javax.swing.JScrollPane();
        tblNutrition = new javax.swing.JTable();
        panelIngTitle = new javax.swing.JPanel();
        scrollPaneIngedients = new javax.swing.JScrollPane();
        tblIngredients = new javax.swing.JTable();
        panelIngButtons = new javax.swing.JPanel();
        btnAddIngredient = new javax.swing.JButton();
        btnRemoveIngredient = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Manage Recipe Box");
        add(lblTitle, java.awt.BorderLayout.PAGE_START);

        btnSave.setText("Save");
        panelSouth.add(btnSave);

        btnCancel.setText("Cancel");
        panelSouth.add(btnCancel);

        add(panelSouth, java.awt.BorderLayout.SOUTH);

        panelCenter.setLayout(new javax.swing.BoxLayout(panelCenter, javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel1.setMinimumSize(new java.awt.Dimension(73, 30));
        jPanel1.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        lblName.setText("Name: ");
        jPanel1.add(lblName);

        txtName.setText("jTextField1");
        jPanel1.add(txtName);

        panelCenter.add(jPanel1);

        jPanel2.setMaximumSize(new java.awt.Dimension(32767, 30));
        jPanel2.setMinimumSize(new java.awt.Dimension(73, 30));
        jPanel2.setLayout(new java.awt.GridLayout(1, 2, 5, 5));

        lblName1.setText("Rating: ");
        jPanel2.add(lblName1);

        txtName1.setText("jTextField1");
        jPanel2.add(txtName1);

        panelCenter.add(jPanel2);

        add(panelCenter, java.awt.BorderLayout.CENTER);

        panelEast.setLayout(new javax.swing.BoxLayout(panelEast, javax.swing.BoxLayout.Y_AXIS));

        scrollPaneNutrition.setBorder(javax.swing.BorderFactory.createTitledBorder("Nutrition Facts"));

        tblNutrition.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNutrition.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblNutrition.getTableHeader().setReorderingAllowed(false);
        scrollPaneNutrition.setViewportView(tblNutrition);

        panelEast.add(scrollPaneNutrition);

        panelIngTitle.setBorder(javax.swing.BorderFactory.createTitledBorder("Ingredients"));
        panelIngTitle.setLayout(new javax.swing.BoxLayout(panelIngTitle, javax.swing.BoxLayout.Y_AXIS));

        tblIngredients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Quantity", "Measuring Unit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblIngredients.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblIngredients.getTableHeader().setReorderingAllowed(false);
        scrollPaneIngedients.setViewportView(tblIngredients);

        panelIngTitle.add(scrollPaneIngedients);

        panelIngButtons.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        btnAddIngredient.setText("Add");
        panelIngButtons.add(btnAddIngredient);

        btnRemoveIngredient.setText("Remove");
        panelIngButtons.add(btnRemoveIngredient);

        panelIngTitle.add(panelIngButtons);

        panelEast.add(panelIngTitle);

        add(panelEast, java.awt.BorderLayout.EAST);
    }// </editor-fold>//GEN-END:initComponents

    private void custInitialize() {
        GUIListener gl = new GUIListener();
        btnSave.addActionListener(gl);
        btnCancel.addActionListener(gl);
        btnAddIngredient.addActionListener(gl);
        btnRemoveIngredient.addActionListener(gl);

        jPanel1.setBorder(GUIFormats.getPaddingBorder());
        jPanel2.setBorder(GUIFormats.getPaddingBorder());

        lblTitle.setFont(GUIFormats.getTitleFont());
    }

    /**
     * Listener for this button panel.
     * Commands should be sent to the Controller
     * @author Ryan Spoon
     *
     */
    private class GUIListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent ae) {
            if(ae.getSource().equals(btnSave)){
                //Recipe r = createRecipe();
                //controller.addRecipe(r);
                Application.openPanel(new OldRecipeListPanel());
            }
            else if(ae.getSource().equals(btnCancel))
            {
                Application.openPanel(new OldRecipeListPanel());
            }
            else if(ae.getSource().equals(btnAddIngredient))
            {
                DefaultTableModel dtm = (DefaultTableModel)tblIngredients.getModel();
                dtm.addRow(new Object [] {null, null, null});
                tblIngredients.setModel(dtm);
                update();
            }
            else if(ae.getSource().equals(btnRemoveIngredient))
            {
                removeIngredient();
            }
            else{
                // Shouldn't be here
            }
        }
    } // end private inner class

    private void updateRecipeList() {
        DefaultTableModel dtm = (DefaultTableModel)tblNutrition.getModel();

        Object[] o = {"hey", 4};
        dtm.addRow(o);
        tblNutrition.setModel(dtm);
        this.update();
    }

    private void removeIngredient() {
        int currentRow = tblIngredients.getSelectedRow();
        if (currentRow != -1) {
            DefaultTableModel dtm = (DefaultTableModel)tblIngredients.getModel();
            dtm.removeRow(currentRow);

            tblIngredients.setModel(dtm);
            if (currentRow < tblIngredients.getRowCount())
                tblIngredients.setRowSelectionInterval(currentRow, currentRow);
            update();
        }
    }

    /**
     * The update method refreshes this panel's data.
     */
    @Override
    public void update() {
            this.revalidate();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddIngredient;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRemoveIngredient;
    private javax.swing.JButton btnSave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel panelCenter;
    private javax.swing.JPanel panelEast;
    private javax.swing.JPanel panelIngButtons;
    private javax.swing.JPanel panelIngTitle;
    private javax.swing.JPanel panelSouth;
    private javax.swing.JScrollPane scrollPaneIngedients;
    private javax.swing.JScrollPane scrollPaneNutrition;
    private javax.swing.JTable tblIngredients;
    private javax.swing.JTable tblNutrition;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName1;
    // End of variables declaration//GEN-END:variables

}
