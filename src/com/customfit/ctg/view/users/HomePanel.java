package com.customfit.ctg.view.users;

import com.customfit.ctg.controller.*;
import com.customfit.ctg.model.*;
import com.customfit.ctg.view.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;

/**
 * Presents the user with his personalized profile home.
 * 
 * @author David
 */
public class HomePanel extends SubPanel {
    
    /**
     * The user currently displayed in the panel.
     */
    private User user;
    
    /**
     * The list of recipes currently displayed in the panel.
     */
    private List<Recipe> recipes;
    
    /** Creates new form HomePanel */
    public HomePanel() {
        initComponents();
        
        //setup the me-menu in the right-top corner
        jComboBoxMeMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"Account: " + UserManagement.getCurrentUser().getName(), "Profile Home","Edit User", "Logout" }));
        
        //
        RecipeManagement.browseRecipes(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jComboBoxMeMenu = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        linkLabelAddNew = new com.customfit.ctg.view.LinkLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextPaneMealPlanNote = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jButtonViewRecipe = new javax.swing.JButton();
        scrollPaneTable1 = new javax.swing.JScrollPane();
        jTableRecipes = new javax.swing.JTable();
        jButtonEditRecipe = new javax.swing.JButton();
        jXMonthView1 = new org.jdesktop.swingx.JXMonthView();

        jLabelTitle.setFont(new java.awt.Font("Tahoma", 3, 18));
        jLabelTitle.setText("Profile Home");

        jScrollPane2.setBorder(null);

        jTextPane1.setBackground(javax.swing.UIManager.getDefaults().getColor("control"));
        jTextPane1.setBorder(null);
        jTextPane1.setEditable(false);
        jTextPane1.setText("Welcome to the Cooking to Goal nutritional planner. This application is designed to help you try to reach the nutritional goals that you plan for yourself and anyone else you want to manage.\n\nThis is your personalized home. Establish meal plans by creating a menu for you and your family. Choose a recipe from the list below to get started.");
        jTextPane1.setFocusable(false);
        jTextPane1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jTextPane1.setOpaque(false);
        jTextPane1.setVerifyInputWhenFocusTarget(false);
        jScrollPane2.setViewportView(jTextPane1);

        jComboBoxMeMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Me Menu", "Edit User", "Logout" }));
        jComboBoxMeMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMeMenuActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Recipes");

        linkLabelAddNew.setText("Add a new recipe");
        linkLabelAddNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linkLabelAddNewActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel3.setText("Meal Planning");

        jScrollPane5.setBorder(null);

        jTextPaneMealPlanNote.setBackground(javax.swing.UIManager.getDefaults().getColor("control"));
        jTextPaneMealPlanNote.setBorder(null);
        jTextPaneMealPlanNote.setEditable(false);
        jTextPaneMealPlanNote.setText("You have %COUNT% meals planned for the next seven days.");
        jTextPaneMealPlanNote.setFocusable(false);
        jTextPaneMealPlanNote.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jTextPaneMealPlanNote.setOpaque(false);
        jTextPaneMealPlanNote.setVerifyInputWhenFocusTarget(false);
        jScrollPane5.setViewportView(jTextPaneMealPlanNote);

        jScrollPane6.setBorder(null);

        jTextPane2.setBackground(javax.swing.UIManager.getDefaults().getColor("control"));
        jTextPane2.setBorder(null);
        jTextPane2.setEditable(false);
        jTextPane2.setText("Select a recipe to view it and establish new meal plans. You may filter the recipes by category.");
        jTextPane2.setFocusable(false);
        jTextPane2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jTextPane2.setOpaque(false);
        jTextPane2.setVerifyInputWhenFocusTarget(false);
        jScrollPane6.setViewportView(jTextPane2);

        jButtonViewRecipe.setText("View");
        jButtonViewRecipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewRecipeActionPerformed(evt);
            }
        });

        jTableRecipes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Recipe", "Rating"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableRecipes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableRecipes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableRecipesMouseClicked(evt);
            }
        });
        scrollPaneTable1.setViewportView(jTableRecipes);

        jButtonEditRecipe.setText("Edit");
        jButtonEditRecipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditRecipeActionPerformed(evt);
            }
        });

        jXMonthView1.setFont(new java.awt.Font("Tahoma", 0, 18));
        jXMonthView1.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(scrollPaneTable1, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(304, 304, 304))
                            .addComponent(jLabelTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(linkLabelAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                                .addComponent(jButtonViewRecipe)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEditRecipe)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jXMonthView1, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(204, 204, 204))
                            .addComponent(jComboBoxMeMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTitle)
                    .addComponent(jComboBoxMeMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrollPaneTable1, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(linkLabelAddNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonViewRecipe)
                            .addComponent(jButtonEditRecipe))
                        .addGap(230, 230, 230))
                    .addComponent(jXMonthView1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxMeMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMeMenuActionPerformed
        // process me menu
        
        //if user hit Profile Home
        if (((String)this.jComboBoxMeMenu.getSelectedItem()).equals("Profile Home"))
            //then tell the controller about it
            UserManagement.viewProfile();
        //if user hit Edit User
        else if (((String)this.jComboBoxMeMenu.getSelectedItem()).equals("Edit User"))
            //then tell the controller about it
            UserManagement.editRegistration(UserManagement.getCurrentUser());
        //if user hit Logout
        else if (((String)this.jComboBoxMeMenu.getSelectedItem()).equals("Logout"))
            //ask controller for logout
            UserManagement.logout();
        //and no matter what, be sure to reset this combo box back to index 0
        this.jComboBoxMeMenu.setSelectedIndex(0);
}//GEN-LAST:event_jComboBoxMeMenuActionPerformed

    private void linkLabelAddNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkLabelAddNewActionPerformed
        //tell controller to create a new recipe
        RecipeManagement.createRecipe();
}//GEN-LAST:event_linkLabelAddNewActionPerformed

    private void jButtonViewRecipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewRecipeActionPerformed
        //if a row is selected
        if (this.jTableRecipes.getSelectedRowCount() > 0) {
            //grab Recipe
            Recipe recipe = this.recipes.get(this.jTableRecipes.getSelectedRow());
            //tell RecipeManagement to view recipe
            RecipeManagement.viewRecipe(recipe);
        }
}//GEN-LAST:event_jButtonViewRecipeActionPerformed

    private void jTableRecipesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRecipesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableRecipesMouseClicked

    private void jButtonEditRecipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditRecipeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonEditRecipeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEditRecipe;
    private javax.swing.JButton jButtonViewRecipe;
    private javax.swing.JComboBox jComboBoxMeMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTableRecipes;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPaneMealPlanNote;
    private org.jdesktop.swingx.JXMonthView jXMonthView1;
    private com.customfit.ctg.view.LinkLabel linkLabelAddNew;
    private javax.swing.JScrollPane scrollPaneTable1;
    // End of variables declaration//GEN-END:variables

    /**
     * Extends SubPanel functionality by returning the title as being the
     * same as on the panel itself.
     * @return The title in the panel.
     */
    @Override
    public String getTitle()
    {
        //grab title from on the panel
        return this.jLabelTitle.getText();
    }
    

    /**
     * Sets the User for which the form will be laid out.
     * @param user 
     */
    public void setUser(User user) {
        //store user in here
        this.user = user;
        //set title label
        this.jLabelTitle.setText(user.getName() + " Home");
    }
    
    /**
     * Sets the list of recipes passed into the view.
     * 
     * @param recipes List of recipes.
     */
    public void setRecipeList(List<Recipe> recipes) {
        this.recipes = recipes;
        
        DefaultTableModel tableModel = (DefaultTableModel)jTableRecipes.getModel();
        
        //clear old results
        while (tableModel.getRowCount() > 0)
        {
            tableModel.removeRow(0);
        }

        //add recipes to list
        for (Recipe recipe : recipes)
        {
            Object[] row = {recipe.getName(), new Long(Math.round(recipe.getRating() * 5.0)).toString()};
            tableModel.addRow(row);
        }
        
        jTableRecipes.setModel(tableModel);
    }
    
    @Override
    public void refresh()
    {
        //refresh data
            this.setRecipeList(Application.getDataDriver().selectAllRecipes());
    }
    
}
